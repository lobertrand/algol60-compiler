f000  origine
f024  debut d'execution
4865   emplacement : 61440  (0xf000)  ligne n° 33	STRING0     string "Hello world !\n"      // place la channe terminie par NUL
6c6c   emplacement : 61442  (0xf002) 
6f20   emplacement : 61444  (0xf004) 
776f   emplacement : 61446  (0xf006) 
726c   emplacement : 61448  (0xf008) 
6420   emplacement : 61450  (0xf00a) 
215c   emplacement : 61452  (0xf00c) 
6e00   emplacement : 61454  (0xf00e) 
496c   emplacement : 61456  (0xf010)  ligne n° 34	STRING1     string "Il fait beau ...\n"   // place la channe terminie par NUL
2066   emplacement : 61458  (0xf012) 
6169   emplacement : 61460  (0xf014) 
7420   emplacement : 61462  (0xf016) 
6265   emplacement : 61464  (0xf018) 
6175   emplacement : 61466  (0xf01a) 
202e   emplacement : 61468  (0xf01c) 
2e2e   emplacement : 61470  (0xf01e) 
5c6e   emplacement : 61472  (0xf020) 
0000   emplacement : 61474  (0xf022) 
6f80   emplacement : 61476  (0xf024)  ligne n° 41	    LDW SP, #STACK_ADRS   // charge SP avec STACK_ADRS
1000   emplacement : 61478  (0xf026) 
2d00   emplacement : 61480  (0xf028)  ligne n° 42	    LDQ NIL, BP           // charge BP avec NIL=0
2100   emplacement : 61482  (0xf02a)  ligne n° 45	    LDQ 0, R1             // R1 = taille donnies locales prog. principal: rien ici
3ffe   emplacement : 61484  (0xf02c)  ligne n° 48	    ADQ -2, SP            // dicrimente le pointeur de pile SP
6d2f   emplacement : 61486  (0xf02e)  ligne n° 49	    STW BP, (SP)          // sauvegarde le contenu du registre BP sur la pile
6d9f   emplacement : 61488  (0xf030)  ligne n° 50	    LDW BP, SP            // charge contenu SP ds BP qui pointe sur sa sauvegarde
ff1f   emplacement : 61490  (0xf032)  ligne n° 51	    SUB SP, R1, SP        // riserve R1 octets sur la pile pour variables locales
6180   emplacement : 61492  (0xf034)  ligne n° 56	    LDW R1, #STRING0      // charge adresse de la channe n00 dans R1
f000   emplacement : 61494  (0xf036) 
614f   emplacement : 61496  (0xf038)  ligne n° 57	    STW R1, -(SP)         // empile paramhtre p = STRING0 contenu dans R1 :
0a50   emplacement : 61498  (0xf03a)  ligne n° 60	    JSR @print_           // appelle la fonction d'adresse print_:
f056   emplacement : 61500  (0xf03c) 
6180   emplacement : 61502  (0xf03e)  ligne n° 65	    LDW R1, #STRING1      // charge adresse de la channe n00 dans R1
f010   emplacement : 61504  (0xf040) 
614f   emplacement : 61506  (0xf042)  ligne n° 66	    STW R1, -(SP)         // empile paramhtre p = STRING0 contenu dans R1 :
0a50   emplacement : 61508  (0xf044)  ligne n° 69	    JSR @print_           // appelle la fonction d'adresse print_:
f056   emplacement : 61510  (0xf046) 
6f9d   emplacement : 61512  (0xf048)  ligne n° 73	    LDW SP, BP            // charge SP avec contenu de BP: abandon infos locales
6daf   emplacement : 61514  (0xf04a)  ligne n° 74	    LDW BP, (SP)          // charge BP avec ancien BP
3f02   emplacement : 61516  (0xf04c)  ligne n° 75	    ADQ 2, SP             // ancien BP supprimi de la pile
0b00   emplacement : 61518  (0xf04e)  ligne n° 80	    TRP #EXIT_EXC         // EXIT: arrjte le programme
0040   emplacement : 61520  (0xf050) 
0950   emplacement : 61522  (0xf052)  ligne n° 82	    JEA @main_            // si on redemande l'exicution, saute ` main_
f024   emplacement : 61524  (0xf054) 
2100   emplacement : 61526  (0xf056)  ligne n° 91	    LDQ 0, R1             // R1 = taille donnies locales (ici 0) de fonction appelie
3ffe   emplacement : 61528  (0xf058)  ligne n° 93	    ADQ -2, SP            // dicrimente le pointeur de pile SP
6d2f   emplacement : 61530  (0xf05a)  ligne n° 94	    STW BP, (SP)          // sauvegarde le contenu du registre BP sur la pile
6d9f   emplacement : 61532  (0xf05c)  ligne n° 95	    LDW BP, SP            // charge contenu SP ds BP qui pointe sur sa sauvegarde
ff1f   emplacement : 61534  (0xf05e)  ligne n° 96	    SUB SP, R1, SP        // riserve R1 octets sur la pile pour la variable locale z
609d   emplacement : 61536  (0xf060)  ligne n° 100	    LDW R0, BP            // R0 = BP
3004   emplacement : 61538  (0xf062)  ligne n° 101	    ADQ 4, R0             // R0 pointe sur p
60a0   emplacement : 61540  (0xf064)  ligne n° 102	    LDW R0, (R0)          // R0 = p = adresse du dibut du texte ` afficher
6e80   emplacement : 61542  (0xf066)  ligne n° 106	    LDW WR, #WRITE_EXC    // on suppose que symbole WRITE_EXC dij` difini
0042   emplacement : 61544  (0xf068) 
0b1e   emplacement : 61546  (0xf06a)  ligne n° 107	    TRP WR                // lance trappe dont n0 dans WR
6f9d   emplacement : 61548  (0xf06c)  ligne n° 111	    LDW SP, BP            // charge SP avec contenu de BP: abandon infos locales
6daf   emplacement : 61550  (0xf06e)  ligne n° 112	    LDW BP, (SP)          // charge BP avec ancien BP
3f02   emplacement : 61552  (0xf070)  ligne n° 113	    ADQ 2, SP             // ancien BP supprimi de la pile
6eaf   emplacement : 61554  (0xf072)  ligne n° 115	    LDW WR, (SP)          // charge WR avec l'adresse de retour
3f02   emplacement : 61556  (0xf074)  ligne n° 116	    ADQ 2, SP             // incrimente le pointeur de pile SP
092e   emplacement : 61558  (0xf076)  ligne n° 117	    JEA (WR)              // saute ` l'instruction d'adresse absolue dans WR
