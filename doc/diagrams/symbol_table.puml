@startuml

class SymbolTable {
    + define(Symbol s)
    + Symbol resolve(String idf)
}
SymbolTable o-- "*" Symbol: - symbols: HashMap<Symbol>
SymbolTable --> "1" SymbolTable: - parent
SymbolTable --> "*" SymbolTable: - children

abstract class Symbol {
    + String getIdentifier()
    + Type getType()
    + Kind getKind()
}

Symbol <|-- Variable
Symbol <|-- Procedure
Symbol <|-- Label

class Variable {
    - String identifier
    - int offset
}
Variable --> "1" Type: type
Variable --> "1" Kind: kind


class Procedure {
    - String identifier
}
Procedure --> "1" SymbolTable: - blockSymbolTable
Procedure -left-> "1" Type: - returnType
Procedure ---> "*" Type: - parameterTypes
Procedure -right-> "1" Kind: - kind

class Label {
    - String identifier
    - int offset
}

enum Kind {
    PROCEDURE,
    VARIABLE,
    LABEL
}

enum Type {
    INTEGER,
    REAL,
    STRING
}

@enduml